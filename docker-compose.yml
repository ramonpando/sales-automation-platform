# =============================================
# SALES AUTOMATION PLATFORM - PRODUCTION STACK
# =============================================
version: '3.8'

networks:
  sales-automation:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local
  traefik_data:
    driver: local

services:
  # =============================================
  # DATABASE LAYER
  # =============================================
  postgres:
    image: postgres:15-alpine
    container_name: sales-postgres
    environment:
      POSTGRES_DB: sales_automation
      POSTGRES_USER: sales_admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-SalesAuto2025!}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
      - ./database/backups:/backups
    ports:
      - "5432:5432"
    networks:
      sales-automation:
        ipv4_address: 172.20.0.10
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sales_admin -d sales_automation"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  redis:
    image: redis:7-alpine
    container_name: sales-redis
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD:-RedisSecure2025!}
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      sales-automation:
        ipv4_address: 172.20.0.11
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # =============================================
  # REVERSE PROXY & SSL
  # =============================================
  traefik:
    image: traefik:v3.0
    container_name: sales-traefik
    command:
      - --api.dashboard=true
      - --api.debug=false
      - --log.level=INFO
      - --accesslog=true
      - --providers.docker=true
      - --providers.docker.network=sales-automation-sales-automation
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-rpando@swip.mx}
      - --certificatesresolvers.letsencrypt.acme.storage=/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_data:/data
      - ./infrastructure/traefik/acme.json:/acme.json
    networks:
      sales-automation:
        ipv4_address: 172.20.0.5
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.bravix.com.mx`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$2y$$10$$rO3RWy7V1/ZU5h2VsOJ/wu8Tx9jKLKY2HH5YNY5j/R7nGYr8mYZJ2"

  # =============================================
  # SCRAPER SERVICE
  # =============================================
  scraper:
    build:
      context: ./scraper
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: sales-scraper
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://sales_admin:${POSTGRES_PASSWORD:-SalesAuto2025!}@postgres:5432/sales_automation
      - REDIS_URL=redis://:${REDIS_PASSWORD:-RedisSecure2025!}@redis:6379/0
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - SCRAPER_INTERVAL=${SCRAPER_INTERVAL:-3600}
      - MAX_CONCURRENT_REQUESTS=${MAX_CONCURRENT_REQUESTS:-5}
      - RATE_LIMIT_DELAY=${RATE_LIMIT_DELAY:-200}
      - ENABLE_METRICS=true
      - METRICS_PORT=9090
    volumes:
      - ./scraper/logs:/app/logs
      - ./scraper/config:/app/config:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      sales-automation:
        ipv4_address: 172.20.0.20
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.scraper.rule=Host(`scraper.bravix.com.mx`)"
      - "traefik.http.routers.scraper.tls=true"
      - "traefik.http.routers.scraper.tls.certresolver=letsencrypt"
      - "traefik.http.services.scraper.loadbalancer.server.port=3000"

  # =============================================
  # MCP ENRICHMENT SERVICE
  # =============================================
  mcp-enrichment:
    build:
      context: ./mcp-enrichment
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: sales-mcp
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://sales_admin:${POSTGRES_PASSWORD:-SalesAuto2025!}@postgres:5432/sales_automation
      - REDIS_URL=redis://:${REDIS_PASSWORD:-RedisSecure2025!}@redis:6379/1
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ENABLE_DATABASE_SAVE=${ENABLE_DATABASE_SAVE:-true}
      - ENABLE_LEAD_SCORING=${ENABLE_LEAD_SCORING:-true}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-placeholder}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-placeholder}
      - BATCH_SIZE=${BATCH_SIZE:-10}
      - RATE_LIMIT_RPM=${RATE_LIMIT_RPM:-60}
      - CACHE_TTL=${CACHE_TTL:-3600}
      - ENABLE_METRICS=true
      - METRICS_PORT=9091
    volumes:
      - ./mcp-enrichment/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      sales-automation:
        ipv4_address: 172.20.0.21
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mcp.rule=Host(`mcp.bravix.com.mx`)"
      - "traefik.http.routers.mcp.tls=true"
      - "traefik.http.routers.mcp.tls.certresolver=letsencrypt"
      - "traefik.http.services.mcp.loadbalancer.server.port=3001"

  # =============================================
  # N8N WORKFLOW ENGINE
  # =============================================
  n8n:
    image: n8nio/n8n:latest
    container_name: sales-n8n
    environment:
      - N8N_HOST=n8n.bravix.com.mx
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://n8n.bravix.com.mx/
      - GENERIC_TIMEZONE=America/Mexico_City
      - N8N_METRICS=true
      - N8N_DIAGNOSTICS_ENABLED=true
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=sales_automation
      - DB_POSTGRESDB_USER=sales_admin
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-SalesAuto2025!}
      - DB_POSTGRESDB_SCHEMA=n8n
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-n8n-encryption-key-32-characters-long}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_JWT_SECRET:-jwt-secret-32-characters-long}
      - N8N_SECURE_COOKIE=true
      - N8N_LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows/backups:/backups
      - ./n8n-workflows/templates:/templates:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mcp-enrichment:
        condition: service_healthy
    networks:
      sales-automation:
        ipv4_address: 172.20.0.30
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.bravix.com.mx`)"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  # =============================================
  # MONITORING STACK
  # =============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: sales-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://prometheus.bravix.com.mx'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      sales-automation:
        ipv4_address: 172.20.0.40
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  grafana:
    image: grafana/grafana:latest
    container_name: sales-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=monitor.bravix.com.mx
      - GF_SERVER_ROOT_URL=https://monitor.bravix.com.mx
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SNAPSHOTS_EXTERNAL_ENABLED=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      sales-automation:
        ipv4_address: 172.20.0.41
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`monitor.bravix.com.mx`)"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  # =============================================
  # BACKUP SERVICE
  # =============================================
  backup:
    image: postgres:15-alpine
    container_name: sales-backup
    environment:
      - PGPASSWORD=${POSTGRES_PASSWORD:-SalesAuto2025!}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
    volumes:
      - ./database/backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
      - ./scripts/cleanup.sh:/cleanup.sh:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      sales-automation:
        ipv4_address: 172.20.0.50
    restart: "no"
    profiles:
      - backup
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # =============================================
  # DEVELOPMENT TOOLS (Optional)
  # =============================================
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sales-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@bravix.com.mx}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - ./database/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      sales-automation:
        ipv4_address: 172.20.0.60
    restart: unless-stopped
    profiles:
      - dev
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.bravix.com.mx`)"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.tls.certresolver=letsencrypt"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: sales-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379:1:${REDIS_PASSWORD:-RedisSecure2025!}
      - HTTP_USER=${REDIS_COMMANDER_USER:-admin}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD:-admin123}
    depends_on:
      - redis
    networks:
      sales-automation:
        ipv4_address: 172.20.0.61
    restart: unless-stopped
    profiles:
      - dev
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis-commander.rule=Host(`redis.bravix.com.mx`)"
      - "traefik.http.routers.redis-commander.tls=true"
      - "traefik.http.routers.redis-commander.tls.certresolver=letsencrypt"
      - "traefik.http.services.redis-commander.loadbalancer.server.port=8081"
